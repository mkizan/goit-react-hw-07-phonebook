{"version":3,"sources":["components/ContactList/ContactList.module.scss","components/Filter/Filter.module.scss","style.module.scss","components/Container/Container.module.scss","redux/contact/contact-actions.js","redux/contact/contact-reducer.js","redux/store.js","components/Container/Container.jsx","redux/contact/contact-operations.js","redux/contact/contact-selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.jsx","index.js","components/ContactForm/ContactForm.module.scss"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","items","createReducer","_","payload","state","filter","id","combineReducers","store","configureStore","reducer","contacts","contactReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","Container","children","className","styles","axios","defaults","baseURL","dispatch","a","get","data","message","text","number","contact","name","phone","post","contactId","delete","getContacts","getFilter","selector","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","includes","ContactForm","useSelector","contactSelectors","useDispatch","useState","stateName","setStateName","stateNumber","setStateNumber","form","onSubmit","event","preventDefault","find","alert","contactOperations","label","type","input","pattern","value","onChange","target","title","placeholder","autoComplete","required","btn","Filter","e","ContactList","useEffect","list","map","list__item","onClick","onDeleteContacts","App","title__phonebook","title__contacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ab43250.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3wSXY\",\"list__item\":\"ContactList_list__item__29IJl\",\"btn\":\"ContactList_btn__LjK5L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2pNgv\",\"input\":\"Filter_input__YmgBH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title__phonebook\":\"style_title__phonebook__3aFT2\",\"title__contacts\":\"style_title__contacts__2HUDu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__11SY1\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactRequest = createAction('contact/fetchContactRequest');\nexport const fetchContactSuccess = createAction('contact/fetchContactSuccess');\nexport const fetchContactError = createAction('contact/fetchContactError');\n\nexport const addContactRequest = createAction('contact/addContactRequest');\nexport const addContactSuccess = createAction('contact/addContactSuccess');\nexport const addContactError = createAction('contact/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contact/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contact/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contact/deleteContactError');\n\nexport const changeFilter = createAction('contact/changeFilter');\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactSuccess,\n  addContactSuccess,\n  deleteContactSuccess,\n  changeFilter,\n} from './contact-actions';\n\nconst items = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore } from '@reduxjs/toolkit';\n// import logger from 'redux-logger';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport contactReducer from './contact/contact-reducer';\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactReducer,\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }), //concat(logger),\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import styles from './Container.module.scss';\n\nconst Container = ({ children }) => {\n  return <div className={styles.Container}>{children}</div>;\n};\n\nexport default Container;\n","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n} from './contact-actions';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchContactRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactError(error.message));\n  }\n};\n\nconst addContact = (text, number) => async dispatch => {\n  const contact = {\n    name: text,\n    phone: number,\n  };\n\n  dispatch(addContactRequest());\n\n  try {\n    const { data } = await axios.post('/contacts', contact);\n    dispatch(addContactSuccess(data));\n  } catch (error) {\n    dispatch(addContactError(error));\n  }\n};\n\nconst deleteContact = contactId => async dispatch => {\n  dispatch(deleteContactRequest());\n\n  try {\n    await axios.delete(`/contacts/${contactId}`);\n    dispatch(deleteContactSuccess(contactId));\n  } catch (error) {\n    dispatch(deleteContactError(error));\n  }\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { fetchContacts, addContact, deleteContact };\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getContacts = state => state.contacts.items;\nconst getFilter = state => state.contacts.filter;\n\nconst getFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\nlet selector = {\n  getContacts,\n  getFilter,\n  getFilteredContacts,\n};\n\nexport default selector;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { contactOperations, contactSelectors } from 'redux/contact';\nimport styles from './ContactForm.module.scss';\n\nfunction ContactForm() {\n  const contacts = useSelector(contactSelectors.getContacts);\n  const dispatch = useDispatch();\n  const [stateName, setStateName] = useState('');\n  const [stateNumber, setStateNumber] = useState('');\n\n  const handleInputChangeName = event => {\n    setStateName(event.target.value);\n  };\n\n  const handleInputChangeNumber = event => {\n    setStateNumber(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === stateName.toLowerCase(),\n      )\n    ) {\n      return alert(`${stateName} is already in contacts`);\n    }\n\n    dispatch(contactOperations.addContact(stateName, stateNumber));\n    setStateName('');\n    setStateNumber('');\n  };\n\n  ContactForm.propTypes = {\n    stateName: PropTypes.string.isRequired,\n    stateNumber: PropTypes.string.isRequired,\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label className={styles.label}>\n        Name\n        <input\n          type=\"text\"\n          className={styles.input}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          value={stateName}\n          onChange={handleInputChangeName}\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          placeholder=\"Enter your name\"\n          autoComplete=\"off\"\n          required\n        />\n      </label>\n      <label className={styles.label}>\n        Number\n        <input\n          type=\"tel\"\n          className={styles.input}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          value={stateNumber}\n          onChange={handleInputChangeNumber}\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          placeholder=\"Enter your phone number\"\n          autoComplete=\"on\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className={styles.btn}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { contactSelectors, changeFilter } from 'redux/contact';\nimport styles from './Filter.module.scss';\n\nconst Filter = () => {\n  const value = useSelector(contactSelectors.getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label className={styles.label}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        className={styles.input}\n        value={value}\n        onChange={e => dispatch(changeFilter(e.target.value))}\n        placeholder=\"Find your contact\"\n        autoComplete=\"off\"\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactOperations, contactSelectors } from 'redux/contact';\nimport styles from './ContactList.module.scss';\n\nconst ContactList = () => {\n  const contacts = useSelector(contactSelectors.getFilteredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactOperations.fetchContacts());\n  }, [dispatch]);\n\n  const onDeleteContacts = id => dispatch(contactOperations.deleteContact(id));\n\n  return (\n    <ul className={styles.list}>\n      {contacts.map(({ name, phone, id }) => {\n        return (\n          <li className={styles.list__item} key={id}>\n            {name}: {phone}\n            <button\n              type=\"button\"\n              className={styles.btn}\n              onClick={() => onDeleteContacts(id)}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport styles from './style.module.scss';\n\nexport default function App() {\n  return (\n    <Container>\n      <h1 className={styles.title__phonebook}>Phonebook</h1>\n      <ContactForm />\n      <h2 className={styles.title__contacts}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1NiH1\",\"label\":\"ContactForm_label__3KgVy\",\"input\":\"ContactForm_input__3emgF\",\"btn\":\"ContactForm_btn__1BmbG\"};"],"sourceRoot":""}